// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;

namespace CoreContext.Models;

public partial class User
{
    public Guid Id { get; set; }

    public string UserName { get; set; } = null!;

    public string Email { get; set; } = null!;

    public string PasswordHash { get; set; } = null!;

    public string FirstName { get; set; } = null!;

    public string LastName { get; set; } = null!;

    public string PhoneNumber { get; set; } = null!;

    public DateOnly DateOfBirth { get; set; }

    public bool IsEmailConfirmed { get; set; }

    public bool IsPhoneNumberConfirmed { get; set; }

    public DateTime CreateOn { get; set; }

    public Guid? CreateBy { get; set; }

    public Guid? CreateSource { get; set; }

    public DateTime? UpdateOn { get; set; }

    public Guid? UpdateBy { get; set; }

    public Guid? UpdateReason { get; set; }

    public DateTime? DeleteOn { get; set; }

    public Guid? DeleteBy { get; set; }

    public Guid? DeleteReason { get; set; }

    public bool IsDeleted { get; set; }

    public virtual ICollection<Company> CompanyCreateByNavigations { get; set; } = new List<Company>();

    public virtual ICollection<Company> CompanyDeleteByNavigations { get; set; } = new List<Company>();

    public virtual ICollection<Company> CompanyUpdateByNavigations { get; set; } = new List<Company>();

    public virtual User? CreateByNavigation { get; set; }

    public virtual Source? CreateSourceNavigation { get; set; }

    public virtual User? DeleteByNavigation { get; set; }

    public virtual Reason? DeleteReasonNavigation { get; set; }

    public virtual ICollection<User> InverseCreateByNavigation { get; set; } = new List<User>();

    public virtual ICollection<User> InverseDeleteByNavigation { get; set; } = new List<User>();

    public virtual ICollection<User> InverseUpdateByNavigation { get; set; } = new List<User>();

    public virtual ICollection<Reason> ReasonCreateByNavigations { get; set; } = new List<Reason>();

    public virtual ICollection<Reason> ReasonDeleteByNavigations { get; set; } = new List<Reason>();

    public virtual ICollection<Reason> ReasonUpdateByNavigations { get; set; } = new List<Reason>();

    public virtual ICollection<Role> RoleCreateByNavigations { get; set; } = new List<Role>();

    public virtual ICollection<Role> RoleDeleteByNavigations { get; set; } = new List<Role>();

    public virtual ICollection<Role> RoleUpdateByNavigations { get; set; } = new List<Role>();

    public virtual ICollection<Source> SourceCreateByNavigations { get; set; } = new List<Source>();

    public virtual ICollection<Source> SourceDeleteByNavigations { get; set; } = new List<Source>();

    public virtual ICollection<Source> SourceUpdateByNavigations { get; set; } = new List<Source>();

    public virtual User? UpdateByNavigation { get; set; }

    public virtual Reason? UpdateReasonNavigation { get; set; }
}